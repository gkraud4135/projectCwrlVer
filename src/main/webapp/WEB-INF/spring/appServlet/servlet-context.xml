<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
			 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
			 xmlns:p="http://www.springframework.org/schema/p"
			 xmlns:beans="http://www.springframework.org/schema/beans"
			 xmlns:context="http://www.springframework.org/schema/context"
			 xmlns:mvc="http://www.springframework.org/schema/mvc"
			 xmlns:websocket="http://www.springframework.org/schema/websocket"
			 xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket.xsd">


<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	<mvc:annotation-driven>
		<mvc:message-converters>
			<beans:bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<beans:property name="supportedMediaTypes">
					<beans:list>
						<beans:value>text/html;charset=UTF-8</beans:value>
					</beans:list>
				</beans:property>
			</beans:bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<context:component-scan base-package="co.kr.project" />

	<!-- file size bean -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    <beans:property name="maxUploadSize" value="200000000" />
    <beans:property name="maxInMemorySize" value="200000000" />
	</beans:bean>

	<beans:bean id="beanNameViewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver" p:order="0" />
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="2" />
	</beans:bean>

	<!-- tiles -->
	<beans:bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" />
		<beans:property name="order" value="1" />
	</beans:bean>

	<beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/spring/tiles/tiles-definitions.xml</beans:value>
				<beans:value>/WEB-INF/spring/tiles/tiles-layout.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>

	<websocket:handlers>
		<websocket:mapping path="/chat" handler="myHandler"/>
	</websocket:handlers>

	<beans:bean id="myHandler" class="co.kr.project.chat.service.SocketHandler"/>



</beans:beans>